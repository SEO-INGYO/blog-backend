<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.backend.post.dao.PostMapper">
    <select id="getAllPosts" resultType="com.example.backend.post.dto.PostAllResponse">
        SELECT 
            p.id, 
            p.title, 
            p.content, 
            c.name AS category, 
            p.visible,
            p.created_user_id AS created_user,
            p.created_time,
            p.last_modified_user_id AS last_modified_user,
            p.last_modified_time,
            GROUP_CONCAT(t.name ORDER BY t.name SEPARATOR ',') AS tags
        FROM posts p
        LEFT JOIN categories c ON p.category_id = c.id
        LEFT JOIN post_tag pt ON p.id = pt.post_id
        LEFT JOIN tags t ON pt.tag_id = t.id
        WHERE p.visible != 'UNPUBLISHED'
        GROUP BY p.id, p.title, p.content, c.name, p.visible, p.created_user_id, p.created_time, p.last_modified_user_id, p.last_modified_time
    </select>

    <select id="getPostAllHistory" resultType="com.example.backend.post.dto.PostHistoryResponse">
        SELECT 
            id, 
            post_id, 
            change_time, 
            change_user, 
            change_type, 
            old_data, 
            new_data
        FROM post_history
        ORDER BY change_time DESC
    </select>

    <select id="getPosts" parameterType="com.example.backend.post.dto.api.PostReadRequest" resultType="com.example.backend.post.dto.PostAllResponse">
        SELECT
            p.id,
            p.title,
            p.content,
            c.name AS category,
            p.visible,
            p.created_time,
            GROUP_CONCAT(t.name SEPARATOR ', ') AS tags
        FROM
            posts p
        LEFT JOIN
            categories c ON p.category_id = c.id
        LEFT JOIN
            post_tag pt ON p.id = pt.post_id
        LEFT JOIN
            tags t ON pt.tag_id = t.id
        <where>
            <if test="category != null">
                AND c.name = #{category}
            </if>
            <if test="tag != null and tag.size > 0">
                AND t.name IN
                <foreach collection="tag" item="tagName" open="(" separator="," close=")">
                    #{tagName}
                </foreach>
            </if>
        </where>
        GROUP BY p.id
        <choose>
            <when test="sortType == 'latest'">
                ORDER BY p.created_time DESC
            </when>
            <when test="sortType == 'oldest'">
                ORDER BY p.created_time ASC
            </when>
            <otherwise>
                <!-- 정렬하지 않음 -->
            </otherwise>
        </choose>
        <if test="limit != null">
            LIMIT #{limit}
        </if>
    </select>

    <select id="getPublishedPosts" parameterType="com.example.backend.post.dto.api.PostReadRequest" resultType="com.example.backend.post.dto.PostAllResponse">
        SELECT
            p.id,
            p.title,
            p.content,
            c.name AS category,
            p.visible,
            p.created_time,
            GROUP_CONCAT(t.name SEPARATOR ', ') AS tags
        FROM
            posts p
        LEFT JOIN
            categories c ON p.category_id = c.id
        LEFT JOIN
            post_tag pt ON p.id = pt.post_id
        LEFT JOIN
            tags t ON pt.tag_id = t.id
        <where>
            p.visible = "PUBLISHED"
            <if test="category != null">
                AND c.name = #{category}
            </if>
            <if test="tag != null and tag.size > 0">
                AND t.name IN
                <foreach collection="tag" item="tagName" open="(" separator="," close=")">
                    #{tagName}
                </foreach>
            </if>
        </where>
        GROUP BY p.id
        <choose>
            <when test="sortType == 'latest'">
                ORDER BY p.created_time DESC
            </when>
            <when test="sortType == 'oldest'">
                ORDER BY p.created_time ASC
            </when>
            <otherwise>
                <!-- 정렬하지 않음 -->
            </otherwise>
        </choose>
        <if test="limit != null">
            LIMIT #{limit}
        </if>
    </select>

</mapper>